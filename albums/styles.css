body {
	text-align: center;
}

.album-div {
	min-width: 15%;
	/*width: 40%;*/
	text-align: center;

	display: inline-block;
	vertical-align: top;
	padding: 1%;
}

/*
* Firefox does not support the `zoom` property as it is non-standard, see:
* https://developer.mozilla.org/en-US/docs/Web/CSS/zoom. The recommendation
* is to use `transform: scale()` instead, but the two properties have many
* differences in behavior. I found that I could get my desired result of
* un-zooming each album "card" to 80% without adversely affecting the rest
* of the page via this hack of overcompensating the body width. I would
* still rather use the straightforward `zoom` property when possible, so
* I'm only falling back to the hack when necessary. There seems to be a lot
* of recent traction for implementing `zoom` support on Firefox -- see:
* https://bugzilla.mozilla.org/show_bug.cgi?id=390936.
*/

@supports (zoom: 0.8) {
	.album-div {
		zoom: 0.8;
	}
}

@supports not (zoom: 0.8) {
	body {
		transform: scale(0.8);
		transform-origin: 0 0;
		width: 120%;
	}
}

.album-img {
	height: 200px;
	width:  200px;
	display: inline-block;

	border: 2px solid black;
	border-radius: 2px;
	box-shadow: 5px 5px #333;
}

.album-title {
	font-family: monospace;
	font-weight: normal;
	font-style: italic;
}

.album-audio {
	margin-top: 2em;
	margin-bottom: 0;
	padding-bottom: 0;
	width: 90%;
	height: 20px;
	display: inline-block;
}

.album-date {
	font-size: x-small;
	margin-left: 1%;
}

.track-time {
	font-family: monospace;
	margin-right: 1em;
	font-size: 85%;
	background-color: lightgray;
	padding: 0.2%;
	border-radius: 3px;
	cursor: pointer;
}

.track-time:hover {
	background-color: gray;
}

.track-name {
	font-family: "Georgia", "Bitstream Vera Serif", serif;
}

.tracklist-div p {
	display: inline-block;
	margin-bottom: 0;
}

.tracklist-div {
	margin-left: 2em;
	text-align: left;
}

.track-div {
	white-space: nowrap;
}
